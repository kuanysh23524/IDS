package com.example.diplom_Kuks_team.kuksteam.controllers;

import com.example.diplom_Kuks_team.kuksteam.models.NetworkDevices;
import com.example.diplom_Kuks_team.kuksteam.repositories.NetworkDevicesRepository;
import com.example.diplom_Kuks_team.kuksteam.services.NetworkCaptureService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
//@RequestMapping("/network")
public class NetworkCaptureController {
    @Autowired
    NetworkCaptureService networkCaptureService;
    @Autowired
    NetworkDevicesRepository networkDevicesRepository;


// –†–∞–Ω—å—à–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
//    @PostMapping("/capture")
//    public String captureTraffic(@RequestParam(name = "adapterId") String name) {
//        new Thread(() -> networkCaptureService.capturePackets()).start();
//        return "üöÄ –ó–∞—Ö–≤–∞—Ç —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω!";
//    }

    @PostMapping("/start-capture")
    public String startCapture(@RequestParam("id") Long id) {
        NetworkDevices device = networkDevicesRepository.findById(id).orElse(null);
        if (device == null) {
            System.out.println("‚ö† –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!");
            return "redirect:/attacks/traffic_data?error=device_not_found";
        }

        System.out.println("–í—ã–±—Ä–∞–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: " + device.getDescription());
        networkCaptureService.startCapture(device);
        return "redirect:/attacks/traffic_data";
    }

    @PostMapping("/stop-capture")
    public String stopCapture() {
        networkCaptureService.stopCapture();
        return "redirect:/attacks/traffic_data";
    }
}